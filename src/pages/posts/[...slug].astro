---
import type { GetStaticPaths } from "astro";
import { render, getEntry } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import PostTitle from "@/components/post/PostTitle.astro";
import PostMetadata from "@/components/post/PostMetadata.astro";
import PostDescription from "@/components/post/PostDescription.astro";
import PostCard from "@/components/PostCard.astro";

import { getSortedPosts } from "@/lib/content-util";
import AnimationSequence from "@/components/extra/AnimationSequence.astro";

export const getStaticPaths = (async () => {
  const posts = await getSortedPosts();
  return posts.map((post) => ({
    params: { slug: post.data.slug },
    props: { post },
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const { title, description, published, series, tags } = post.data;
const { Content, headings } = await render(post);
const previousPost =
  post.data.previousPostSlug &&
  (await getEntry("post", post.data.previousPostSlug));

const nextPost =
  post.data.nextPostSlug && (await getEntry("post", post.data.nextPostSlug));
---

<Layout>
  <AnimationSequence
    as="div"
    class="flex flex-col gap-2"
    animationClass="onload-animation"
    effectDepth={2}
    delay={75}
    initialDelay={200}
  >
    <div class="card flex flex-col p-6" ]>
      <PostTitle title={title} />
      <PostDescription description={description} />
      <div class="flex items-center gap-2">
        <PostMetadata published={published} series={series} tags={tags} />
      </div>
      <div
        class="relative py-4 before:absolute before:w-full before:border-t before:border-dashed"
      >
      </div>
      <article class="prose">
        <Content />
      </article>
    </div>
    <div class="grid basis-12 grid-cols-[1fr_1fr] gap-2">
      {previousPost && <PostCard class="btn" post={previousPost} dense />}
      {nextPost && <PostCard class="btn" post={nextPost} dense />}
    </div>
  </AnimationSequence>
</Layout>
